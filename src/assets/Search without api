import { Stack, Card, CardMedia, CardContent, Typography, TextField, FormControl } from "@mui/material";
import React, { useEffect, useState } from "react";
import todoImg from '../assets/img/todo1.jpg'
import seachImg from '../assets/img/search1.jpg'
import { Link } from "react-router-dom";
import { AllProducts } from "../api";

const SearchFunctionality = () => {
    const [products, setProducts] = useState([])
    const [searchQuery, setSearchQuery] = useState('')

    useEffect(() => {
        getproducts()
    }, [])

    const getproducts = async () => {
        const data = await AllProducts()
        setProducts(data.products)
    }

    return <>
        <FormControl sx={{ my: 2, maxWidth: 400, }}>
            <TextField
                label="Seach Product"
                type='text'
                name='search'
                value={searchQuery}
                onChange={(e) => { setSearchQuery(e.target.value) }}
                placeholder='search'
                focused
            />
        </FormControl>
        {/* <Stack direction="row" spacing={3} flexWrap="wrap" useFlexGap sx={{ justifyContent: 'center', marginX: 'auto', marginY: 5, }}>
            {products.length > 0 && products?.map((item) => {
                return <Card key={item.id} className='product-card' sx={{ maxWidth: 300, borderRadius: 2 }}>
                    <Link >
                        <CardMedia
                            component="img"
                            alt="green iguana"
                            height="250"
                            width={250}
                            image={item.thumbnail}
                        />
                        <CardContent>
                            <Typography variant="h6">
                                {item.title}
                            </Typography>
                            <Typography variant="body2" color="text.secondary">
                                {item.description}
                            </Typography>
                        </CardContent>
                    </Link>
                </Card>
            })}
        </Stack> */}

        <Stack direction="row" spacing={3} flexWrap="wrap" useFlexGap sx={{ justifyContent: 'center', marginX: 'auto', marginY: 5, }}>
            {products.length > 0 && products.filter((item) => {
                if (searchQuery == '') {
                    return item
                } else if (item.category.toLowerCase().includes(searchQuery.toLowerCase())) {
                    console.log(item.title.toLowerCase().includes(searchQuery.toLowerCase()))
                    return item
                }
            }).map((item) => {
                return <Card key={item.id} className='product-card' sx={{ maxWidth: 300, borderRadius: 2 }}>
                    {console.log(item.category)}
                    <Link >
                        <CardMedia
                            component="img"
                            alt="green iguana"
                            height="250"
                            width={250}
                            image={item.thumbnail}
                        />
                        <CardContent>
                            <Typography variant="h6">
                                {item.title}
                            </Typography>
                            <Typography variant="body2" color="text.secondary">
                                {item.description}
                            </Typography>
                        </CardContent>
                    </Link>
                </Card>
            })}
        </Stack>
    </>
}

export default SearchFunctionality